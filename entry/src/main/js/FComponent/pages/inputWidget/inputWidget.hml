<div class="widget-container" >
    <label class="label" target="{{ widgetConfig.id }}">
        {{ widgetConfig.options.label }}
    </label>

<!--    不同type标签的选择 条件选择-->
<!--    input组件类型，可选值为-->
<!--    text(input/op.type)，email(input/op.validation)，date(date/op.type)，time(time/)，-->
<!--    number(number/)，password(input/op.type)，button，-->
<!--    checkbox，radio。-->
<!--        -->
<!--    其中text，email，date，time，number，password-->
<!--    这六种类型之间支持动态切换修改-->

<!--    组件已经控制到了必须是INPUT组件，我们只需要判断type 或是option.type-->
<!--    如果type==input,则判断options.type==text/number/password-->
<!--    如果是text，email，date，time,number，password，button
    只需要动态配置type-->

    <div if="{{widgetConfig.type === 'input' || widgetConfig.type === 'date' || widgetConfig.type === 'time' || widgetConfig.type === 'number' }}" class="fill-widget">
        <input if="{{ widgetConfig.options.validation == 'email' }}" id="{{ widgetConfig.id }}" type="email"
               value="{{ widgetInfo.value }}">
        </input>

        <picker elif="{{ widgetConfig.type == 'date' }}" id="{{ widgetConfig.id }}" value="{{ widgetInfo.value }}" type="date" start="1949-10-1"
                end="2030-6-5"
                value="1949-10-1"
                show="true" ></picker>
        <picker elif="{{ widgetConfig.type == 'time' }}" id="{{ widgetConfig.id }}" value="{{ widgetInfo.value }}" type="time" value="20:10"
                show="true"></picker>
        <input else id="{{ widgetConfig.id }}" value="{{ widgetInfo.value }}" ref="{{ widgetConfig.id }}"
               type="{{ widgetConfig.options.type ? widgetConfig.options.type : widgetConfig.type }} "
               name="{{ widgetConfig.id }}">
        </input>
    </div>

<!--    否则如果是checkbox，radio，需要循环渲染-->
    <div else class="input-mut">
        <div class="item-div" for="{{ (index, radioItem) in widgetConfig.options.optionItems }}" tid="{{ index }}">
            <input type="{{ widgetConfig.type }}" id="radio-{{ index }}" name="{{ widgetConfig.id }}"
                   value="{{ radioItem.value }}">
            </input>
            <label target="radio-{{ index }}">{{ radioItem.label }}</label>
        </div>
    </div>

</div>
